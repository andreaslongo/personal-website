[{"content":"Asciidoctor has good support for diagrams with the Asciidoctor Diagram plugin.\n To make this work with Hugo, a static site generator, you need\n   a working asciidoctor-diagram plugin\n  and some settings in your site config.\n   Then run hugo --destination public to generate your site and diagrams.\n Have a look at my example repository to get an idea of how this works.\n ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/asciidoctor/diagram-hugo/","summary":"Asciidoctor has good support for diagrams with the Asciidoctor Diagram plugin.\n To make this work with Hugo, a static site generator, you need\n   a working asciidoctor-diagram plugin\n  and some settings in your site config.\n   Then run hugo --destination public to generate your site and diagrams.\n Have a look at my example repository to get an idea of how this works.","title":"Generate diagrams with asciidoctor and Hugo"},{"content":"Use quotes for the remote side of your command.\n $ scp \u0026#39;remote-host:path/source-file*\u0026#39; ./local-target source-file1.png 100% 10KB 180.1KB/s 00:00 source-file2.png 100% 17KB 282.7KB/s 00:00 source-file3.png 100% 12KB 274.4KB/s 00:00   With quotes, wildcards are expanded by the remote’s shell instead of your local shell.\n ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/ssh/scp-wildcards/","summary":"Use quotes for the remote side of your command.\n $ scp \u0026#39;remote-host:path/source-file*\u0026#39; ./local-target source-file1.png 100% 10KB 180.1KB/s 00:00 source-file2.png 100% 17KB 282.7KB/s 00:00 source-file3.png 100% 12KB 274.4KB/s 00:00   With quotes, wildcards are expanded by the remote’s shell instead of your local shell.\n ","title":"Use wildcards with scp to copy remote files"},{"content":"Be careful. Renaming tags after the fact is difficult.\n There is no single step for renaming a tag. Create a new tag with a new name and then delete the old tag.\n First Review the commit logs and identify your tags.\n git log --decorate --graph --oneline     For local, annotated tags Optional, if you want to preserve the date of the old tag.\n # Get date of the old tag git show --date=iso \u0026lt;old\u0026gt; git show --date=iso first-release # Set date for the new tag via environment variable export GIT_COMMITTER_DATE=\u0026#34;\u0026lt;date\u0026gt;\u0026#34; export GIT_COMMITTER_DATE=\u0026#34;2021-01-22 16:24:39 +0100\u0026#34;   Rename an annotated tag.\n # Create a new tag git tag --annotate \u0026lt;new\u0026gt; \u0026#39;\u0026lt;old\u0026gt;^{}\u0026#39; git tag --annotate v1.0 \u0026#39;first-release^{}\u0026#39; # Delete the old tag git tag --delete \u0026lt;old\u0026gt; git tag --delete first-release   Rename a GPG-signed tag.\n # Create a new tag git tag --sign \u0026lt;new\u0026gt; \u0026#39;\u0026lt;old\u0026gt;^{}\u0026#39; git tag --sign v1.0 \u0026#39;first-release^{}\u0026#39; # Delete the old tag git tag --delete \u0026lt;old\u0026gt; git tag --delete first-release   An annotated tag is a Git object. It can point to another annotated tag. GPG-signed tags are also annotated tags.\n Make sure that your new tag points to a commit object and not to the old tag object.\n   For local, lightweight tags Rename a lightweight tag\n # Create a new tag git tag \u0026lt;new\u0026gt; \u0026lt;old\u0026gt; # Delete the old tag git tag --delete \u0026lt;old\u0026gt;   A lightweight tag is not a Git object. It is just a name or label for an object, usually a commit object.\n   For remote tags Additional steps for tags already pushed to remote repositories.\n Push new tags\n git push --tags   Delete old tag\n git push --delete \u0026lt;remote\u0026gt; \u0026lt;tag\u0026gt; git push --delete origin first-release     For other users Delete tags from local repository that no longer exist on the remote.\n git pull --prune --tags   Other users will receive a \u0026#34;renamed\u0026#34; tag as new tag from your remote repositories. Git will not delete old tags automatically.\n Make sure that other users remove deleted tags from their local repositories.\n   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/git/rename-tag/","summary":"Be careful. Renaming tags after the fact is difficult.\n There is no single step for renaming a tag. Create a new tag with a new name and then delete the old tag.\n First Review the commit logs and identify your tags.\n git log --decorate --graph --oneline     For local, annotated tags Optional, if you want to preserve the date of the old tag.\n # Get date of the old tag git show --date=iso \u0026lt;old\u0026gt; git show --date=iso first-release # Set date for the new tag via environment variable export GIT_COMMITTER_DATE=\u0026#34;\u0026lt;date\u0026gt;\u0026#34; export GIT_COMMITTER_DATE=\u0026#34;2021-01-22 16:24:39 +0100\u0026#34;   Rename an annotated tag.","title":"Rename Git tags"},{"content":"Auto update Podman/Docker images.\n $ podman container run --pull=always   This runs podman image pull before the container starts.\n   Note  Podman provides a Docker-compatible command line front end. You can substitute the docker command with podman or set up a shell alias alias docker=podman.     With Kubernetes, you can set the image pull policy for a container.\n spec: containers: - name: \u0026lt;name\u0026gt; imagePullPolicy: Always   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/container/auto-update-container-images/","summary":"Auto update Podman/Docker images.\n $ podman container run --pull=always   This runs podman image pull before the container starts.\n   Note  Podman provides a Docker-compatible command line front end. You can substitute the docker command with podman or set up a shell alias alias docker=podman.     With Kubernetes, you can set the image pull policy for a container.\n spec: containers: - name: \u0026lt;name\u0026gt; imagePullPolicy: Always   ","title":"Auto update container images"},{"content":"Remove a remote tag:\n $ git push --delete \u0026lt;remote\u0026gt; \u0026lt;tag\u0026gt; $ git push --delete origin v1.0   Remove multiple remote tags:\n $ git push --delete \u0026lt;remote\u0026gt; \u0026lt;tag-1\u0026gt; \u0026lt;tag-2\u0026gt; \u0026lt;...\u0026gt; $ git push --delete origin v1.0   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/git/delete-tag/","summary":"Remove a remote tag:\n $ git push --delete \u0026lt;remote\u0026gt; \u0026lt;tag\u0026gt; $ git push --delete origin v1.0   Remove multiple remote tags:\n $ git push --delete \u0026lt;remote\u0026gt; \u0026lt;tag-1\u0026gt; \u0026lt;tag-2\u0026gt; \u0026lt;...\u0026gt; $ git push --delete origin v1.0   ","title":"Delete remote Git tags"},{"content":"Add space to a LVM logical volume.\n $ sudo lvextend --resizefs --size \u0026lt;size\u0026gt; \u0026lt;group\u0026gt;/\u0026lt;volume\u0026gt; $ sudo lvextend --resizefs --size +2G centos/root   Add 100% of the available free space.\n $ sudo lvextend --resizefs --extents +100%FREE centos/root   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/unix/lvm-extend-logical-volume/","summary":"Add space to a LVM logical volume.\n $ sudo lvextend --resizefs --size \u0026lt;size\u0026gt; \u0026lt;group\u0026gt;/\u0026lt;volume\u0026gt; $ sudo lvextend --resizefs --size +2G centos/root   Add 100% of the available free space.\n $ sudo lvextend --resizefs --extents +100%FREE centos/root   ","title":"Extend a LVM logical volume"},{"content":"Zsh config files and the order of sourcing during startup.\n  1 ~/.zshenv  always sourced\n 2 ~/.zprofile  sourced if login shell\n 3 ~/.zshrc  sourced if interactive shell\n 4 ~/.zlogin  sourced if login shell\n 5 ~/.zlogout  sourced when exiting shell\n   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/unix/zsh-config-files/","summary":"Zsh config files and the order of sourcing during startup.\n  1 ~/.zshenv  always sourced\n 2 ~/.zprofile  sourced if login shell\n 3 ~/.zshrc  sourced if interactive shell\n 4 ~/.zlogin  sourced if login shell\n 5 ~/.zlogout  sourced when exiting shell\n   ","title":"Zsh configuration files"},{"content":"You can run commands from Cygwin with elevated permissions.\n On Windows, you have something like Run as different user or Run as administrator. And on Linux, you probably use the sudo command for this.\n To get similar functionality on Cygwin, you can add a new alias to your shell’s config file. The following is for Zsh, but it should also work for other bash-like shells.\n ~/.zshrc alias sudo=\u0026#39;cygstart --action=runas\u0026#39;   Now you can run something like this to test the alias.\n $ sudo touch sudo-test   Windows will ask for your username and password. Then it will run the command in the context of the given user.\n That works, but the user experience is not great.\n Your command gets executed in a new Cygwin process which automatically exits when the command returns. Also, the user prompt is GUI based which interrupts your CLI workflow.\n ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-sudo-command/","summary":"You can run commands from Cygwin with elevated permissions.\n On Windows, you have something like Run as different user or Run as administrator. And on Linux, you probably use the sudo command for this.\n To get similar functionality on Cygwin, you can add a new alias to your shell’s config file. The following is for Zsh, but it should also work for other bash-like shells.\n ~/.zshrc alias sudo=\u0026#39;cygstart --action=runas\u0026#39;   Now you can run something like this to test the alias.","title":"A sudo command for Cygwin"},{"content":"You can define the default home directory for all Cygwin users in the nsswitch.conf file.\n For example, the following sets your default home directory to /cygdrive/c/Users/{user_name}/home, or in Windows notation to C:\\Users\\{user_name}\\home.\n /etc/nsswitch.conf db_home: /%H/home   You can change it to whatever you like.\n See the Cygwin documentation for more information. Look here below the /path section for more on supported wildcard characters.\n ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-change-default-home-dir/","summary":"You can define the default home directory for all Cygwin users in the nsswitch.conf file.\n For example, the following sets your default home directory to /cygdrive/c/Users/{user_name}/home, or in Windows notation to C:\\Users\\{user_name}\\home.\n /etc/nsswitch.conf db_home: /%H/home   You can change it to whatever you like.\n See the Cygwin documentation for more information. Look here below the /path section for more on supported wildcard characters.\n ","title":"Change the default home directory for Cygwin users"},{"content":"To use the Windows clipboard in Vim on Cygwin, add the following to your Vim config file.\n .vimrc set clipboard=unnamed   Vim will now use the clipboard register * for yank, delete, change and put operations. The * register gets synced with the Windows clipboard automatically.\n ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-vim-clipboard/","summary":"To use the Windows clipboard in Vim on Cygwin, add the following to your Vim config file.\n .vimrc set clipboard=unnamed   Vim will now use the clipboard register * for yank, delete, change and put operations. The * register gets synced with the Windows clipboard automatically.\n ","title":"Use the clipboard in Vim on Cygwin"},{"content":"Traditionally, system administrators use Active Directory (AD) basic user accounts with limited permissions to run a service (Service Account).\n Managed Service Accounts (MSA) are special accounts to eliminate the need for administrators to manually manage the credentials, passwords, and SPNs of traditional service accounts. Also, with MSAs these tasks no longer disrupt a service (no downtime).\n Pro  Administration  Automatic password changes. No manual password management.\n Availability  No service downtime for password changes.\n Security  Frequent password changes. User login to systems via MSA is not possible.\n   Con  Initial Setup  Initial setup and troubleshooting is more complex for MSAs than with basic user accounts.\n   Types of managed service accounts There are three types of managed service accounts.\n  Virtual Account  Local system account for local services. Access to network resources is only possible via computer identity.\n Managed Service Account (MSA)  Active Directory account for generic services.\n Group Managed Service Account (gMSA)  Active Directory account for cluster services.\n     Requirements Use the PowerShell to work with managed service accounts. Install and import the following module on the system on which you want to use MSAs.\n $ Install-WindowsFeature RSAT-AD-PowerShell $ Import-Module ActiveDirectory   Docs: Remote Server Administration Tools (RSAT) for Windows, ActiveDirectory\n   Create a managed service account in Active Directory $ New-ADServiceAccount \u0026lt;account name\u0026gt; -RestrictToSingleComputer   Docs: New-ADServiceAccount\n   Install a managed service account on a system Before you can use an MSA, you have to install it on the target system.\n $ Install-ADServiceAccount \u0026lt;account name\u0026gt;   You can test the MSA from the system.\n $ Test-ADServiceAccount \u0026lt;account name\u0026gt; True   Now, use the Services console Services.msc to configure a service to use the MSA.\n   Leave the password blank.\n  Ensure that the account name ends with a dollar sign $.\n  Start or restart the service.\n   Docs: Install-ADServiceAccount, Test-ADServiceAccount\n   Remove a managed service account You should remove an MSA from the system if it is no longer needed.\n $ Uninstall-ADServiceAccount \u0026lt;account name\u0026gt;   Docs: Uninstall-ADServiceAccount\n   Reset the password for a managed service account Active Directory manages MSA passwords automatically. You don’t have to do anything. Should you still have to reset the password manually, you can do so.\n $ Reset-ADServiceAccountPassword \u0026lt;account name\u0026gt;   Docs: Reset-ADServiceAccountPassword\n   Troubleshooting A service does not start with a managed service account Confirm that the MSA exists and is enabled in Active Directory. $ Get-ADServiceAccount \u0026lt;account name\u0026gt; DistinguishedName : CN=msa-sql01,CN=Managed Service Accounts,DC=example,DC=com Enabled : True Name : msa-sql01 ObjectClass : msDS-ManagedServiceAccount ObjectGUID : 12345a13-12e3-1c23-b456-a123e123fd78 SamAccountName : msa-sql01$ SID : S-1-5-21-1234567890-1234567890-098765432-184195 UserPrincipalName :   Confirm that the account is installed on the system $ Install-ADServiceAccount \u0026lt;account name\u0026gt;   Confirm that the account has the SeServiceLogonRight permission $ NTRights +r SeServiceLogonRight –u \u0026lt;account name\u0026gt;   Docs: Get-ADServiceAccount, Install-ADServiceAccount, NTRIGHTS.exe (Windows Server 2003 Resource Kit Tools)\n    ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/windows/ad-managed-service-accounts/","summary":"Traditionally, system administrators use Active Directory (AD) basic user accounts with limited permissions to run a service (Service Account).\n Managed Service Accounts (MSA) are special accounts to eliminate the need for administrators to manually manage the credentials, passwords, and SPNs of traditional service accounts. Also, with MSAs these tasks no longer disrupt a service (no downtime).\n Pro  Administration  Automatic password changes. No manual password management.\n Availability  No service downtime for password changes.","title":"Active Directory - Managed Service Accounts"},{"content":"Recursively search for files by name with find. Then, sort the result by time, newest first with ls -lt.\n $ find . -type f -name \u0026#34;Makefile*\u0026#34; -exec ls -lt {} + -rw------- 1 al al 1916 Feb 17 12:44 ./cc-python/{{cookiecutter.project_repository}}/Makefile -rw------- 1 al al 1862 Feb 17 12:41 ./data-api/Makefile -rw------- 1 al al 963 Feb 16 15:45 ./personal-website/Makefile -rw------- 1 al al 254 Feb 15 17:07 ./cc-python/Makefile   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/unix/find-files-sorted-by-time/","summary":"Recursively search for files by name with find. Then, sort the result by time, newest first with ls -lt.\n $ find . -type f -name \u0026#34;Makefile*\u0026#34; -exec ls -lt {} + -rw------- 1 al al 1916 Feb 17 12:44 ./cc-python/{{cookiecutter.project_repository}}/Makefile -rw------- 1 al al 1862 Feb 17 12:41 ./data-api/Makefile -rw------- 1 al al 963 Feb 16 15:45 ./personal-website/Makefile -rw------- 1 al al 254 Feb 15 17:07 ./cc-python/Makefile   ","title":"Find files and sort them by time on Unix"},{"content":"I haven’t found a good alternative to the Unix uptime command for Windows yet.\n uptime from the procps-ng package\n $ uptime 12:53:36 up 5:03, 1 user, load average: 0.83, 0.61, 0.36 $ uptime --pretty up 5 hours, 3 minutes $ uptime --since 2021-02-17 07:50:35   Tell how long a Windows system has been running For PowerShell version 6+, there is the Get-Uptime cmdlet.\n $ Get-Uptime Days : 30 Hours : 7 Minutes : 33 Seconds : 45 Milliseconds : 0 Ticks : 26192250000000 TotalDays : 30,3151041666667 TotalHours : 727,5625 TotalMinutes : 43653,75 TotalSeconds : 2619225 TotalMilliseconds : 2619225000 $ Get-Uptime -Since Monday, January 18, 2021 7:56:57 AM   If Get-Uptime is not available, you can query the WMI with a CIM cmdlet. On Windows, this is the same as the Get-Uptime -Since command.\n $ Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object LastBootUpTime LastBootUpTime -------------- 18.01.2021 07:56:41   The LastBootUpTime value may not be updated if you have fast startup enabled for your system.\n   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/windows/get-uptime/","summary":"I haven’t found a good alternative to the Unix uptime command for Windows yet.\n uptime from the procps-ng package\n $ uptime 12:53:36 up 5:03, 1 user, load average: 0.83, 0.61, 0.36 $ uptime --pretty up 5 hours, 3 minutes $ uptime --since 2021-02-17 07:50:35   Tell how long a Windows system has been running For PowerShell version 6+, there is the Get-Uptime cmdlet.\n $ Get-Uptime Days : 30 Hours : 7 Minutes : 33 Seconds : 45 Milliseconds : 0 Ticks : 26192250000000 TotalDays : 30,3151041666667 TotalHours : 727,5625 TotalMinutes : 43653,75 TotalSeconds : 2619225 TotalMilliseconds : 2619225000 $ Get-Uptime -Since Monday, January 18, 2021 7:56:57 AM   If Get-Uptime is not available, you can query the WMI with a CIM cmdlet.","title":"Show uptime on a Windows system"},{"content":"Datetime to string Use the datetime.strftime() method to convert a Python datetime object to a string of any format.\n \u0026gt;\u0026gt;\u0026gt; from datetime import datetime \u0026gt;\u0026gt;\u0026gt; dt = datetime(2009, 10, 1, 20, 36, 41) \u0026gt;\u0026gt;\u0026gt; dt.strftime(\u0026#39;%d.%m.%Y %H:%M:%S\u0026#39;) \u0026#39;01.10.2009 20:36:41\u0026#39;   The argument to datetime.strftime() is a format string build with format codes. See strftime() and strptime() Format Codes for a list of available format codes.\n   String to datetime Use the datetime.strptime() method to parse a string of any format representing a date and time to a datetime object.\n \u0026gt;\u0026gt;\u0026gt; from datetime import datetime \u0026gt;\u0026gt;\u0026gt; timestamp = \u0026#39;01.10.2009 20:36:41\u0026#39; \u0026gt;\u0026gt;\u0026gt; datetime.strptime(timestamp, \u0026#39;%d.%m.%Y %H:%M:%S\u0026#39;) datetime.datetime(2009, 10, 1, 20, 36, 41)   The second argument to datetime.strptime() is again a format string (see above).\n   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/python/convert-datetime-from-string/","summary":"Datetime to string Use the datetime.strftime() method to convert a Python datetime object to a string of any format.\n \u0026gt;\u0026gt;\u0026gt; from datetime import datetime \u0026gt;\u0026gt;\u0026gt; dt = datetime(2009, 10, 1, 20, 36, 41) \u0026gt;\u0026gt;\u0026gt; dt.strftime(\u0026#39;%d.%m.%Y %H:%M:%S\u0026#39;) \u0026#39;01.10.2009 20:36:41\u0026#39;   The argument to datetime.strftime() is a format string build with format codes. See strftime() and strptime() Format Codes for a list of available format codes.\n   String to datetime Use the datetime.","title":"Convert datetime from and to string in Python"},{"content":"You can retrieve the state of your text as it was some time ago. This concept is called undo tree or undo branches.\n Moving through the undo tree Go to newer/older text state.\n g+ g-   Go to older text state, 10 minutes before.\n :earlier 10m   Go to newer text state, 5 minutes later.\n :later 5m   Using g- and g+ will get you to all possible text states while repeating u and CTRL-R does not.\n See also :help undo-branches.\n   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/vim/undo-branches/","summary":"You can retrieve the state of your text as it was some time ago. This concept is called undo tree or undo branches.\n Moving through the undo tree Go to newer/older text state.\n g+ g-   Go to older text state, 10 minutes before.\n :earlier 10m   Go to newer text state, 5 minutes later.\n :later 5m   Using g- and g+ will get you to all possible text states while repeating u and CTRL-R does not.","title":"Vim undo branches"},{"content":"Whether you are a developer or a consumer of RESTful web services, these two plugins might come in handy.\n Send requests and receive responses to and from your REST APIs with your editor. You can quickly explore your REST API without switching context to other tools like curl or Postman.\n   This plugin is for Vim. It is a wrapper around curl.\n  This plugin is for Visual Studio Code. It is similar to the Vim plugin.\n   Clean and Easy Requests With both plugins, you write your API request as a text block in your editor and sent it to your API on demand.\n The response shows up in a new editor buffer/window.\n You can write multiple request blocks in the same file and send them separately.\n Save your file for later reference, or share it with other developers as an example with your code.\n One thing to note is that the syntax for the two plugins is slightly different. You can’t use a Vim request block directly with VS Code. However, it is straightforward to adjust the request block to make it work.\n To send requests\n  Type in a request block.\n  Place the cursor anywhere within the block.\n  Hit the trigger key to send the request (default: CTRL-J).\n   Vim ./example.rest # vim: set filetype=rest # global curl options --silent --include -- # GET request https://reqres.in GET /api/users/2 # POST request https://reqres.in POST /api/users { \u0026#34;name\u0026#34;: \u0026#34;andreas\u0026#34;, \u0026#34;job\u0026#34;: \u0026#34;consultant\u0026#34; } # DELETE request https://reqres.in DELETE /api/users/2     Tip You can add query parameters like so.\n https://reqres.in GET /api/users?per_page=2\u0026amp;page=4   For better readability, you can write this instead.\n https://reqres.in GET /api/users per_page=2 page=4   If your query parameters are more complex, you may have to enable Line-by-line Request Body in Vim :let b:vrc_split_request_body = 1.\n https://localhost:8001 GET /api/content/search limit=10 cql=(type=page and space=IT and label=infrastructure)     ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/web/rest-api-editor-plugins/","summary":"Whether you are a developer or a consumer of RESTful web services, these two plugins might come in handy.\n Send requests and receive responses to and from your REST APIs with your editor. You can quickly explore your REST API without switching context to other tools like curl or Postman.\n   This plugin is for Vim. It is a wrapper around curl.\n  This plugin is for Visual Studio Code.","title":"Text editor plugins for web APIs"},{"content":"How to use PKCS #12 archives with Apache Tomcat for Transport Layer Security (TLS). TLS superseded the Secure Sockets Layer (SSL) protocol.\n In the following example, we create a Tomcat TLS connector and use a PKCS #12 file as keystore.\n Directory layout ../Tomcat/ ../Tomcat/ | certificates/ | | file.p12 | conf/ | | server.xml   The file file.p12 contains the private key and the file server.xml contains the password for the certificate. Make sure that only the Tomcat process can access them.\n The password for the certificate’s private key must match that for the PKCS #12 file.\n Tomcat version 8, 9 and 10 server.xml \u0026lt;!-- TOMCAT TLS CONNECTOR --\u0026gt; \u0026lt;Connector port=\u0026#34;8443\u0026#34; protocol=\u0026#34;org.apache.coyote.http11.Http11NioProtocol\u0026#34; SSLEnabled=\u0026#34;true\u0026#34; scheme=\u0026#34;https\u0026#34; secure=\u0026#34;true\u0026#34; \u0026gt; \u0026lt;SSLHostConfig\u0026gt; certificateVerification=\u0026#34;optional\u0026#34; \u0026lt;Certificate certificateKeystoreType=\u0026#34;PKCS12\u0026#34; certificateKeystoreFile=\u0026#34;certificates/\u0026lt;file\u0026gt;.p12\u0026#34; (1) certificateKeystorePassword=\u0026#34;\u0026lt;password\u0026gt;\u0026#34; (2) /\u0026gt; \u0026lt;/SSLHostConfig\u0026gt; \u0026lt;/Connector\u0026gt;     Adapt certificateKeystoreFile and\n  certificateKeystorePassword to your environment\n     Tomcat version 7 We need a different config for Tomcat 7.\n server.xml \u0026lt;!-- TOMCAT 7.x TLS CONNECTOR --\u0026gt; \u0026lt;Connector port=\u0026#34;8443\u0026#34; protocol=\u0026#34;org.apache.coyote.http11.Http11NioProtocol\u0026#34; SSLEnabled=\u0026#34;true\u0026#34; scheme=\u0026#34;https\u0026#34; secure=\u0026#34;true\u0026#34; clientAuth=\u0026#34;false\u0026#34; keystoreType=\u0026#34;PKCS12\u0026#34; keystoreFile=\u0026#34;certificates/\u0026lt;file\u0026gt;.p12\u0026#34; (1) keystorePass=\u0026#34;\u0026lt;password\u0026gt;\u0026#34; (2) /\u0026gt;     Adapt keystoreFile and\n  keystorePass to your environment\n   After restarting Tomcat, you can connect to TCP port 8443 via HTTP over TLS (HTTPS), for example.\n   ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/security/use-pkcs12-with-tomcat/","summary":"How to use PKCS #12 archives with Apache Tomcat for Transport Layer Security (TLS). TLS superseded the Secure Sockets Layer (SSL) protocol.\n In the following example, we create a Tomcat TLS connector and use a PKCS #12 file as keystore.\n Directory layout ../Tomcat/ ../Tomcat/ | certificates/ | | file.p12 | conf/ | | server.xml   The file file.p12 contains the private key and the file server.xml contains the password for the certificate.","title":"Use PKCS #12 archives with Apache Tomcat for TLS/SSL"},{"content":"To download or upgrade a Vagrant box, you can use the command vagrant box add and vagrant box update.\n Most of the time, you should be fine using these automated processes. But sometimes you need more control. Imagine you are working from home and you need to download several huge boxes. You also have video calls with your customers throughout the day, so your priority is to maintain high call quality. To do that, you need to prevent Vagrant from eating up your entire internet bandwidth.\n Control your Vagrant download Vagrant has no built-in option for controlling the download process, but fortunately, you can use the tool of your choice to download a box.\n You also want to integrate a box smoothly into your existing Vagrant environment so that commands like vagrant box update will work as intended.\n In the following example, we will download and import the Debian Buster v10.7.0 box for Virtualbox.\n To download a box  Get the direct download link for a box.\n  https://app.vagrantup.com/debian/boxes/contrib-buster64/versions/10.7.0/providers/virtualbox.box\n     Download the box.\nI am using curl here with a download rate limit, but you can use any tool that works for you.\n $ curl --location --remote-name --limit-rate 500k --continue-at - https://app.vagrantup.com/debian/boxes/contrib-buster64/versions/10.7.0/providers/virtualbox.box         To import a box  Add the box to Vagrant.\nNote the last argument, which is the local file you just downloaded.\n $ vagrant box add debian/contrib-buster64 ./virtualbox.box       Rename the version directory of the box to the correct version.\n$ cd ~/.vagrant.d/boxes/debian-VAGRANTSLASH-buster64/ $ mv ./0 ./10.7.0   Your directory structure should now look like this:\n debian-VAGRANTSLASH-contrib-buster64/ | 10.7.0/ | | virtualbox/ | | | Vagrantfile | | | box.ovf | | | box_update_check | | | contrib-buster.vmdk | | | master_id | | | metadata.json | metadata_url       If not exist, create a metadata_url file.\nThis file should contain a link to the Vagrant box without the version part.\n $ echo -n \u0026#34;https://app.vagrantup.com/debian/boxes/contrib-buster64\u0026#34; \u0026gt; ./metadata_url       Verify by listing all installed boxes.\n$ vagrant box list debian/contrib-buster64 (virtualbox, 10.7.0)      You should see your new or updated box with the correct version number and, commands like vagrant box update should work as usual.\n    ","permalink":"https://www.andreaslongo.com/blog/things-i-learned/vagrant/import-vagrant-box/","summary":"To download or upgrade a Vagrant box, you can use the command vagrant box add and vagrant box update.\n Most of the time, you should be fine using these automated processes. But sometimes you need more control. Imagine you are working from home and you need to download several huge boxes. You also have video calls with your customers throughout the day, so your priority is to maintain high call quality.","title":"Download and import a Vagrant box manually"}]