<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IT Operations on Andreas Longo</title>
    <link>https://www.andreaslongo.com/categories/it-operations/</link>
    <description>Recent content in IT Operations on Andreas Longo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreaslongo.com/categories/it-operations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A sudo Like Command for Cygwin</title>
      <link>https://www.andreaslongo.com/blog/cygwin-sudo/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/cygwin-sudo/</guid>
      <description>You can run commands from Cygwin with elevated permissions.
 On Windows, you have something like Run as different user or Run as administrator. And on Linux, you probably use sudo for this.
 To get similar functionality on Cygwin, you can add a new alias to your shell’s config file. The following is for ZSH, but it should also work with other bash-like shells.
 ~/.zshrc alias sudo=&amp;#39;cygstart --action=runas&amp;#39;   Now you can run something like this to test the alias.</description>
    </item>
    
    <item>
      <title>Change the Default Home Directory for Every Cygwin User</title>
      <link>https://www.andreaslongo.com/blog/cygwin-default-home-directory/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/cygwin-default-home-directory/</guid>
      <description>You can define the default home directory for all Cygwin users in the nsswitch.conf file.
 For example, the following sets your default home directory to /cygdrive/c/Users/{user_name}/home, or in windows notation C:\Users{user_name}\home.
 /etc/nsswitch.conf db_home: /%H/home   You can change it to whatever you like. Consult the Cygwin documentation for more information. And look here below the /path section for more on supported wildcard characters.
 </description>
    </item>
    
    <item>
      <title>Use the Windows Clipboard in Vim on Cygwin</title>
      <link>https://www.andreaslongo.com/blog/cygwin-vim-clipboard/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/cygwin-vim-clipboard/</guid>
      <description>To use the Windows clipboard in Vim on Cygwin, add the following to your Vim config file.
 ~/.vim/.vimrc set clipboard=unnamed   Vim will now use the clipboard register * for yank, delete, change and put operations. The * register gets synced with the Windows clipboard automatically.
 </description>
    </item>
    
    <item>
      <title>Using Active Directory Managed Service Accounts</title>
      <link>https://www.andreaslongo.com/blog/ad-managed-service-accounts/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/ad-managed-service-accounts/</guid>
      <description>Traditionally, system administrators use Active Directory (AD) user accounts with limited permissions to run a service (service account).
 Managed service accounts (MSA) are special accounts to eliminate the need for administrators to manually manage the credentials, passwords, and SPNs of traditional service accounts. Also, with MSAs, these tasks no longer disrupt a service (downtime).
  Administration  No manual password management is required.
 Availability  No service downtime is necessary for password changes.</description>
    </item>
    
    <item>
      <title>Get Uptime on a Windows System</title>
      <link>https://www.andreaslongo.com/blog/windows-get-uptime/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/windows-get-uptime/</guid>
      <description>I haven’t found a good alternative to the Unix uptime command for Windows yet.
 uptime from the procps-ng package
 $ uptime 12:53:36 up 5:03, 1 user, load average: 0.83, 0.61, 0.36 $ uptime --pretty up 5 hours, 3 minutes $ uptime --since 2021-02-17 07:50:35   Tell how long a Windows system has been running For PowerShell version 6+, there is the Get-Uptime cmdlet.
 $ Get-Uptime Days : 30 Hours : 7 Minutes : 33 Seconds : 45 Milliseconds : 0 Ticks : 26192250000000 TotalDays : 30,3151041666667 TotalHours : 727,5625 TotalMinutes : 43653,75 TotalSeconds : 2619225 TotalMilliseconds : 2619225000 $ Get-Uptime -Since Monday, January 18, 2021 7:56:57 AM   If Get-Uptime is not available, you can query the WMI with a CIM cmdlet.</description>
    </item>
    
    <item>
      <title>How to Use PKCS #12 Archives with Apache Tomcat for TLS/SSL</title>
      <link>https://www.andreaslongo.com/blog/use-pkcs12-with-tomcat/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/use-pkcs12-with-tomcat/</guid>
      <description>Today I learned how to use PKCS #12 archives with Apache Tomcat for Transport Layer Security (TLS). TLS superseded Secure Sockets Layer (SSL) protocol.
 In the following example, we create a Tomcat TLS connector that uses a PKCS #12 file as Keystore.
 Directory layout ../Tomcat/ ../Tomcat/ | certificates/ | | file.p12 | conf/ | | server.xml   The files file.p12 and server.xml contain the private key and password for a certificate.</description>
    </item>
    
  </channel>
</rss>
