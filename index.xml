<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Andreas Longo</title>
    <link>https://www.andreaslongo.com/</link>
    <description>Recent content on Andreas Longo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreaslongo.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Delete remote Git tags</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/git/delete-tag/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/git/delete-tag/</guid>
      <description>Remove a remote Git tag:
 $ git push --delete &amp;lt;remote&amp;gt; &amp;lt;tag&amp;gt; $ git push --delete origin v1.0   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Remove a remote Git tag:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">$ git push --delete &lt;remote&gt; &lt;tag&gt;
$ git push --delete origin v1.0</code></pre>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Zsh configuration files</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/linux/zsh-config-files/</link>
      <pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/linux/zsh-config-files/</guid>
      <description>Zsh config files and the order of sourcing during startup.
  1 ~/.zshenv  always sourced
 2 ~/.zprofile  sourced if login shell
 3 ~/.zshrc  sourced if interactive shell
 4 ~/.zlogin  sourced if login shell
 5 ~/.zlogout  sourced when exiting shell
   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Zsh config files and the order of sourcing during startup.</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">1 <code>~/.zshenv</code></dt>
<dd>
<p>always sourced</p>
</dd>
<dt class="hdlist1">2 <code>~/.zprofile</code></dt>
<dd>
<p>sourced if login shell</p>
</dd>
<dt class="hdlist1">3 <code>~/.zshrc</code></dt>
<dd>
<p>sourced if interactive shell</p>
</dd>
<dt class="hdlist1">4 <code>~/.zlogin</code></dt>
<dd>
<p>sourced if login shell</p>
</dd>
<dt class="hdlist1">5 <code>~/.zlogout</code></dt>
<dd>
<p>sourced when exiting shell</p>
</dd>
</dl>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>A sudo command for Cygwin</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/cygwin/sudo-command/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/cygwin/sudo-command/</guid>
      <description>You can run commands from Cygwin with elevated permissions.
 On Windows, you have something like Run as different user or Run as administrator. And on Linux, you probably use sudo for this.
 To get similar functionality on Cygwin, you can add a new alias to your shell’s config file. The following is for ZSH, but it should also work with other bash-like shells.
 ~/.zshrc alias sudo=&amp;#39;cygstart --action=runas&amp;#39;   Now you can run something like this to test the alias.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can run commands from <a href="https://cygwin.com">Cygwin</a> with elevated permissions.</p>
</div>
<div class="paragraph">
<p>On Windows, you have something like <code>Run as different user</code> or <code>Run as administrator</code>.
And on Linux, you probably use <a href="https://www.sudo.ws"><code>sudo</code></a> for this.</p>
</div>
<div class="paragraph">
<p>To get similar functionality on Cygwin, you can add a new alias to your shell’s config file.
The following is for <a href="https://www.zsh.org">ZSH</a>, but it should also work with other bash-like shells.</p>
</div>
<div class="listingblock">
<div class="title"><code>~/.zshrc</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">alias sudo=&#39;cygstart --action=runas&#39;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Now you can run something like this to test the alias.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ sudo touch sudo-test</code></pre>
</div>
</div>
<div class="paragraph">
<p>Windows will ask for your username and password.
Then it will run the command in the context of the given user.</p>
</div>
<div class="paragraph">
<p>That works, but it is a bit of a hack.
The command is executed in a new Cygwin process, which is closed when the command returns.
Also, the password/user prompt is uncomfortable at best compared to the real <code>sudo</code> user experience.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Change the default home directory for Cygwin users</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/cygwin/change-default-home-dir/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/cygwin/change-default-home-dir/</guid>
      <description>You can define the default home directory for all Cygwin users in the nsswitch.conf file.
 For example, the following sets your default home directory to /cygdrive/c/Users/{user_name}/home, or in windows notation C:\Users{user_name}\home.
 /etc/nsswitch.conf db_home: /%H/home   You can change it to whatever you like. Consult the Cygwin documentation for more information. And look here below the /path section for more on supported wildcard characters.
 </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can define the default home directory for all <a href="https://cygwin.com">Cygwin</a> users in the <code>nsswitch.conf</code> file.</p>
</div>
<div class="paragraph">
<p>For example, the following sets your default home directory to <code>/cygdrive/c/Users/{user_name}/home</code>, or in windows notation <code>C:\Users{user_name}\home</code>.</p>
</div>
<div class="listingblock">
<div class="title"><code>/etc/nsswitch.conf</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">db_home: /%H/home</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can change it to whatever you like.
Consult the <a href="https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-mapping-nsswitch-home">Cygwin documentation</a> for more information.
And look <a href="https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-mapping-nsswitch-passwd">here</a> below the <code>/path</code> section for more on supported wildcard characters.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Use the clipboard in Vim on Cygwin</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/cygwin/vim-clipboard/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/cygwin/vim-clipboard/</guid>
      <description>To use the Windows clipboard in Vim on Cygwin, add the following to your Vim config file.
 ~/.vim/.vimrc set clipboard=unnamed   Vim will now use the clipboard register * for yank, delete, change and put operations. The * register gets synced with the Windows clipboard automatically.
 </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>To use the Windows clipboard in <a href="https://www.vim.org/">Vim</a> on <a href="https://cygwin.com">Cygwin</a>, add the following to your Vim config file.</p>
</div>
<div class="listingblock">
<div class="title"><code>~/.vim/.vimrc</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">set clipboard=unnamed</code></pre>
</div>
</div>
<div class="paragraph">
<p>Vim will now use the clipboard register <code>*</code> for yank, delete, change and put operations.
The <code>*</code> register gets synced with the Windows clipboard automatically.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Active Directory - Managed Service Accounts</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/ad-managed-service-accounts/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/ad-managed-service-accounts/</guid>
      <description>Traditionally, system administrators use Active Directory (AD) user accounts with limited permissions to run a service (service account).
 Managed service accounts (MSA) are special accounts to eliminate the need for administrators to manually manage the credentials, passwords, and SPNs of traditional service accounts. Also, with MSAs, these tasks no longer disrupt a service (downtime).
  Administration  No manual password management is required.
 Availability  No service downtime is necessary for password changes.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Traditionally, system administrators use Active Directory (AD) user accounts with limited permissions to run a service (service account).</p>
</div>
<div class="paragraph">
<p><strong>Managed service accounts (MSA)</strong> are special accounts to eliminate the need for administrators to manually manage the credentials, passwords, and SPNs of traditional service accounts.
Also, with MSAs, these tasks no longer disrupt a service (downtime).</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">Administration</dt>
<dd>
<p>No manual password management is required.</p>
</dd>
<dt class="hdlist1">Availability</dt>
<dd>
<p>No service downtime is necessary for password changes.</p>
</dd>
<dt class="hdlist1">Security</dt>
<dd>
<p>Besides the automatic password changes, system logins are not possible with MSAs.</p>
</dd>
</dl>
</div>
<div class="sect1">
<h2 id="_types_of_managed_service_accounts">Types of managed service accounts</h2>
<div class="sectionbody">
<div class="paragraph">
<p>There are three types of managed service accounts.</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">Virtual Account</dt>
<dd>
<p>Local system accounts <strong>for local services</strong>. Access to network resources is possible via computer identity.</p>
</dd>
<dt class="hdlist1">Managed Service Account (MSA)</dt>
<dd>
<p>Active Directory accounts <strong>for generic services</strong>.</p>
</dd>
<dt class="hdlist1">Group Managed Service Account (gMSA)</dt>
<dd>
<p>Active Directory accounts <strong>for cluster services</strong>.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_requirements">Requirements</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Use PowerShell to work with managed service accounts.
Install and import the following module on the system on which you want to use MSAs.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Install-WindowsFeature RSAT-AD-PowerShell
$ Import-Module ActiveDirectory</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-US/troubleshoot/windows-server/system-management-components/remote-server-administration-tools">Remote Server Administration Tools (RSAT) for Windows</a>, <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration">ActiveDirectory</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_create_a_managed_service_account_in_active_directory">Create a managed service account in Active Directory</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ New-ADServiceAccount &lt;account name&gt; -RestrictToSingleComputer</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/new-adserviceaccount">New-ADServiceAccount</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_install_a_managed_service_account_on_a_system">Install a managed service account on a system</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Before you can use an MSA, you have to install it on the target system.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Install-ADServiceAccount &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can test the MSA from the system.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Test-ADServiceAccount &lt;account name&gt;

True</code></pre>
</div>
</div>
<div class="paragraph">
<p>Now, use the Services console <code>Services.msc</code> to configure a service to use the MSA.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Leave the password blank.</p>
</li>
<li>
<p>Ensure that the account name ends with a dollar sign <code>$</code>.</p>
</li>
<li>
<p>Start or restart the service.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/install-adserviceaccount">Install-ADServiceAccount</a>, <a href="https://docs.microsoft.com/en-us/powershell/module/activedirectory/test-adserviceaccount">Test-ADServiceAccount</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_remove_a_managed_service_account">Remove a managed service account</h2>
<div class="sectionbody">
<div class="paragraph">
<p>You should remove an MSA from the system if it is no longer needed.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Uninstall-ADServiceAccount &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/uninstall-adserviceaccount">Uninstall-ADServiceAccount</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_reset_the_password_for_a_managed_service_account">Reset the password for a managed service account</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Active Directory manages MSA passwords automatically.
You don’t have to do anything.
Should you still have to reset the password manually, you can do so.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Reset-ADServiceAccountPassword &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/reset-adserviceaccountpassword">Reset-ADServiceAccountPassword</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_troubleshooting">Troubleshooting</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_a_service_does_not_start_with_a_managed_service_account">A service does not start with a managed service account</h3>
<div class="listingblock">
<div class="title">Confirm that the MSA exists and is enabled in Active Directory.</div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Get-ADServiceAccount &lt;account name&gt;

DistinguishedName : CN=msa-sql01,CN=Managed Service Accounts,DC=example,DC=com
Enabled           : True
Name              : msa-sql01
ObjectClass       : msDS-ManagedServiceAccount
ObjectGUID        : 12345a13-12e3-1c23-b456-a123e123fd78
SamAccountName    : msa-sql01$
SID               : S-1-5-21-1234567890-1234567890-098765432-184195
UserPrincipalName :</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Confirm that the account is installed on the system</div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Install-ADServiceAccount &lt;account name&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Confirm that the account has the <code>SeServiceLogonRight</code> permission</div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ NTRights +r SeServiceLogonRight –u &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/get-adserviceaccount">Get-ADServiceAccount</a>, <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/install-adserviceaccount">Install-ADServiceAccount</a>, <a href="https://ss64.com/nt/ntrights.html">NTRIGHTS.exe (Windows Server 2003 Resource Kit Tools)</a></p>
</div>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Find files and sort them by time</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/linux/find-files-sorted-by-time/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/linux/find-files-sorted-by-time/</guid>
      <description>Recursively search for files by name with find. Then, sort the result by time, newest first with ls -lt.
 $ find . -type f -name &amp;#34;Makefile*&amp;#34; -exec ls -lt {} + -rw------- 1 al al 1916 Feb 17 12:44 ./cc-python/{{cookiecutter.project_repository}}/Makefile -rw------- 1 al al 1862 Feb 17 12:41 ./data-api/Makefile -rw------- 1 al al 963 Feb 16 15:45 ./personal-website/Makefile -rw------- 1 al al 254 Feb 15 17:07 ./cc-python/Makefile   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Recursively search for files by name with <code>find</code>.
Then, sort the result by time, newest first with <code>ls -lt</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ find . -type f -name &#34;Makefile*&#34; -exec ls -lt {} +
-rw------- 1 al al 1916 Feb 17 12:44 ./cc-python/{{cookiecutter.project_repository}}/Makefile
-rw------- 1 al al 1862 Feb 17 12:41 ./data-api/Makefile
-rw------- 1 al al  963 Feb 16 15:45 ./personal-website/Makefile
-rw------- 1 al al  254 Feb 15 17:07 ./cc-python/Makefile</code></pre>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Show uptime on a Windows system</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/get-uptime/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/get-uptime/</guid>
      <description>I haven’t found a good alternative to the Unix uptime command for Windows yet.
 uptime from the procps-ng package
 $ uptime 12:53:36 up 5:03, 1 user, load average: 0.83, 0.61, 0.36 $ uptime --pretty up 5 hours, 3 minutes $ uptime --since 2021-02-17 07:50:35   Tell how long a Windows system has been running For PowerShell version 6+, there is the Get-Uptime cmdlet.
 $ Get-Uptime Days : 30 Hours : 7 Minutes : 33 Seconds : 45 Milliseconds : 0 Ticks : 26192250000000 TotalDays : 30,3151041666667 TotalHours : 727,5625 TotalMinutes : 43653,75 TotalSeconds : 2619225 TotalMilliseconds : 2619225000 $ Get-Uptime -Since Monday, January 18, 2021 7:56:57 AM   If Get-Uptime is not available, you can query the WMI with a CIM cmdlet.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>I haven’t found a good alternative to the Unix <code>uptime</code> command for Windows yet.</p>
</div>
<div class="paragraph">
<p><code>uptime</code> from the <a href="https://gitlab.com/procps-ng/procps">procps-ng</a> package</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ uptime
 12:53:36 up  5:03,  1 user,  load average: 0.83, 0.61, 0.36
$ uptime --pretty
up 5 hours, 3 minutes
$ uptime --since
2021-02-17 07:50:35</code></pre>
</div>
</div>
<div class="sect1">
<h2 id="_tell_how_long_a_windows_system_has_been_running">Tell how long a Windows system has been running</h2>
<div class="sectionbody">
<div class="paragraph">
<p>For <a href="https://docs.microsoft.com/en-us/powershell/">PowerShell</a> version 6+, there is the <a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-uptime"><code>Get-Uptime</code></a> cmdlet.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Get-Uptime

Days              : 30
Hours             : 7
Minutes           : 33
Seconds           : 45
Milliseconds      : 0
Ticks             : 26192250000000
TotalDays         : 30,3151041666667
TotalHours        : 727,5625
TotalMinutes      : 43653,75
TotalSeconds      : 2619225
TotalMilliseconds : 2619225000

$ Get-Uptime -Since

Monday, January 18, 2021 7:56:57 AM</code></pre>
</div>
</div>
<div class="paragraph">
<p>If <code>Get-Uptime</code> is not available, you can query the WMI with a CIM cmdlet.
On Windows, this is the same as the <code>Get-Uptime -Since</code> command.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object LastBootUpTime

LastBootUpTime
--------------
18.01.2021 07:56:41</code></pre>
</div>
</div>
<div class="paragraph">
<p>The <code>LastBootUpTime</code> value may not be updated if you have <strong>fast startup</strong> enabled for your system.</p>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Convert datetime from and to string</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/python/convert-datetime-from-string/</link>
      <pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/python/convert-datetime-from-string/</guid>
      <description>From String Parse a string representing a date/time in any format to a Python datetime object with the datetime.strptime() method.
 &amp;gt;&amp;gt;&amp;gt; from datetime import datetime &amp;gt;&amp;gt;&amp;gt; timestamp = &amp;#39;01.10.2009 20:36:41&amp;#39; &amp;gt;&amp;gt;&amp;gt; datetime.strptime(timestamp, &amp;#39;%d.%m.%Y %H:%M:%S&amp;#39;) datetime.datetime(2009, 10, 1, 20, 36, 41)   The second argument to datetime.strptime() is a format string build with format codes. See strftime() and strptime() Format Codes for a full list of available format codes.</description>
      <content:encoded><![CDATA[<div class="sect1">
<h2 id="_from_string">From String</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Parse a <code>string</code> representing a date/time in any format to a Python <code>datetime</code> object with the <code>datetime.strptime()</code> method.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python">&gt;&gt;&gt; from datetime import datetime

&gt;&gt;&gt; timestamp = &#39;01.10.2009 20:36:41&#39;
&gt;&gt;&gt; datetime.strptime(timestamp, &#39;%d.%m.%Y %H:%M:%S&#39;)
datetime.datetime(2009, 10, 1, 20, 36, 41)</code></pre>
</div>
</div>
<div class="paragraph">
<p>The second argument to <code>datetime.strptime()</code> is a <strong>format <code>string</code></strong> build with <strong>format codes</strong>.
See <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes">strftime() and strptime() Format Codes</a> for a full list of available format codes.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_to_string">To String</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Convert a <code>datetime</code> object to a <code>string</code> of any format with the <code>datetime.strftime()</code> method.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python">&gt;&gt;&gt; from datetime import datetime

&gt;&gt;&gt; dt = datetime(2009, 10, 1, 20, 36, 41)
&gt;&gt;&gt; dt.strftime(&#39;%d.%m.%Y %H:%M:%S&#39;)
&#39;01.10.2009 20:36:41&#39;</code></pre>
</div>
</div>
<div class="paragraph">
<p>The argument to <code>datetime.strftime()</code> is a <strong>format <code>string</code></strong> (see above).</p>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Vim undo branches</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/vim/undo-branches/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/vim/undo-branches/</guid>
      <description>You can undo and redo changes without having to press u or CTRL-R repeatedly. Retrieve the state of your buffer as it was some time ago.
 This concept is called undo tree or undo branches. See :help undo-branches.
 Moving through the undo tree Go to older text state (10 minutes before)
 :earlier 10m   Go to newer text state (5 minutes later)
 :later 5m     </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can undo and redo changes without having to press <code>u</code> or <code>CTRL-R</code> repeatedly.
Retrieve the state of your buffer as it was some time ago.</p>
</div>
<div class="paragraph">
<p>This concept is called <strong>undo tree</strong> or <strong>undo branches</strong>.
See <code>:help undo-branches</code>.</p>
</div>
<div class="sect1">
<h2 id="_moving_through_the_undo_tree">Moving through the undo tree</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Go to older text state (10 minutes before)</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">:earlier 10m</code></pre>
</div>
</div>
<div class="paragraph">
<p>Go to newer text state (5 minutes later)</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">:later 5m</code></pre>
</div>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Text editor plugins for REST APIs</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/web/rest-api-editor-plugins/</link>
      <pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/web/rest-api-editor-plugins/</guid>
      <description>Whether you are a developer or a consumer of RESTful web services, these two plugins might come in handy.
 Send requests and receive responses to and from your REST APIs with your editor. You can quickly explore your REST API without switching context to other tools like curl or Postman.
   This plugin is for Vim. It is a wrapper around curl.
  This plugin is for Visual Studio Code.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Whether you are a developer or a consumer of RESTful web services, these two plugins might come in handy.</p>
</div>
<div class="paragraph">
<p>Send requests and receive responses to and from your REST APIs with your editor.
You can quickly explore your REST API without switching context to other tools like <a href="https://curl.se/">curl</a> or <a href="https://www.postman.com/">Postman</a>.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/diepm/vim-rest-console">This plugin</a> is for <a href="https://www.vim.org/">Vim</a>.
It is a wrapper around <code>curl</code>.</p>
</li>
<li>
<p><a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client">This plugin</a> is for <a href="https://code.visualstudio.com/">Visual Studio Code</a>. It is similar to the Vim plugin.</p>
</li>
</ul>
</div>
<div class="sect1">
<h2 id="_clean_and_easy_requests">Clean and Easy Requests</h2>
<div class="sectionbody">
<div class="paragraph">
<p>With both plugins, you write your API request as a text block in your editor and sent it to your API on demand.</p>
</div>
<div class="paragraph">
<p>The response shows up in a new editor buffer/window.</p>
</div>
<div class="paragraph">
<p>You can write multiple request blocks in the same file and send them separately.</p>
</div>
<div class="paragraph">
<p>Save your file for later reference, or share it with other developers as an example with your code.
It doesn’t get any simpler than this.</p>
</div>
<div class="paragraph">
<p>One thing to note is that the syntax for the two plugins is slightly different.
You can’t use a Vim request block directly with VS Code.
However, it is straightforward to adjust the request block to make it work.</p>
</div>
<div class="listingblock">
<div class="title">Vim <code>./example.rest</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console"># vim: set filetype=rest

# global curl options
--silent
--include
--

# Type in a request block
# Placed the cursor anywhere within the block
# Hit the trigger key &lt;C-j&gt; (default) to send the request
# A new vertically split buffer will be shown to display the output

# A simple GET request

https://reqres.in
GET /api/users/2

# A POST request

https://reqres.in
POST /api/users
{
    &#34;name&#34;: &#34;morpheus&#34;,
    &#34;job&#34;: &#34;leader&#34;
}

# And a DELETE request

https://reqres.in
DELETE /api/users/2</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_bonus_tip">Bonus Tip</h2>
<div class="sectionbody">
<div class="paragraph">
<p>You can add query parameters like so.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">https://reqres.in
GET /api/users?per_page=2&amp;page=4</code></pre>
</div>
</div>
<div class="paragraph">
<p>For better readability, you can write this instead.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">https://reqres.in
GET /api/users
per_page=2
page=4</code></pre>
</div>
</div>
<div class="paragraph">
<p>If your query parameters are more complex, you may have to enable <a href="https://github.com/diepm/vim-rest-console#54-line-by-line-request-body">Line-by-line Request Body</a> in Vim <code>:let b:vrc_split_request_body = 1</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">https://localhost:8001
GET /api/content/search
limit=10
cql=(type=page and space=IT and label=infrastructure)</code></pre>
</div>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Use PKCS #12 archives with Apache Tomcat for TLS/SSL</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/security/use-pkcs12-with-tomcat/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/security/use-pkcs12-with-tomcat/</guid>
      <description>How to use PKCS #12 archives with Apache Tomcat for Transport Layer Security (TLS). TLS superseded Secure Sockets Layer (SSL) protocol.
 In the following example, we create a Tomcat TLS connector that uses a PKCS #12 file as Keystore.
 Directory layout ../Tomcat/ ../Tomcat/ | certificates/ | | file.p12 | conf/ | | server.xml   The files file.p12 and server.xml contain the private key and password for a certificate.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>How to use <a href="https://en.wikipedia.org/wiki/PKCS_12">PKCS #12</a> archives with <a href="https://tomcat.apache.org/">Apache Tomcat</a> for <a href="https://en.wikipedia.org/wiki/Transport_Layer_Security">Transport Layer Security (TLS)</a>.
TLS superseded Secure Sockets Layer (SSL) protocol.</p>
</div>
<div class="paragraph">
<p>In the following example, we create a Tomcat TLS connector that uses a PKCS #12 file as Keystore.</p>
</div>
<div class="listingblock">
<div class="title">Directory layout <code>../Tomcat/</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">../Tomcat/
| certificates/
| | file.p12
| conf/
| | server.xml</code></pre>
</div>
</div>
<div class="paragraph">
<p>The files <code>file.p12</code> and <code>server.xml</code> contain the private key and password for a certificate.
<strong>Make sure that only the Tomcat process can access them</strong>.</p>
</div>
<div class="paragraph">
<p><strong>The password for the certificate’s private key must match that for the PKCS #12 file</strong>.</p>
</div>
<div class="listingblock">
<div class="title"><code>../Tomcat/conf/server.xml</code> for Tomcat version 10, 9, and 8</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;!-- TOMCAT TLS CONNECTOR --&gt;
&lt;Connector
    port=&#34;8443&#34;
        protocol=&#34;org.apache.coyote.http11.Http11NioProtocol&#34;
        SSLEnabled=&#34;true&#34;
        scheme=&#34;https&#34;
	secure=&#34;true&#34;
    &gt;
    &lt;SSLHostConfig&gt;
        certificateVerification=&#34;optional&#34;
        &lt;Certificate
            certificateKeystoreType=&#34;PKCS12&#34;
            certificateKeystoreFile=&#34;certificates/&lt;file&gt;.p12&#34; <b class="conum">(1)</b>
            certificateKeystorePassword=&#34;&lt;password&gt;&#34; <b class="conum">(2)</b>
        /&gt;
    &lt;/SSLHostConfig&gt;
&lt;/Connector&gt;</code></pre>
</div>
</div>
<div class="colist arabic">
<ol>
<li>
<p>Adapt <code>certificateKeystoreFile</code> and</p>
</li>
<li>
<p><code>certificateKeystorePassword</code> to your environment</p>
</li>
</ol>
</div>
<div class="paragraph">
<p><strong>For Tomcat 7, we need a different config</strong>.</p>
</div>
<div class="listingblock">
<div class="title"><code>../Tomcat/conf/server.xml</code> for Tomcat version 7</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;!-- TOMCAT 7.x TLS CONNECTOR --&gt;
&lt;Connector
    port=&#34;8443&#34;
        protocol=&#34;org.apache.coyote.http11.Http11NioProtocol&#34;
        SSLEnabled=&#34;true&#34;
        scheme=&#34;https&#34;
        secure=&#34;true&#34;
        clientAuth=&#34;false&#34;
        keystoreType=&#34;PKCS12&#34;
        keystoreFile=&#34;certificates/&lt;file&gt;.p12&#34; <b class="conum">(1)</b>
        keystorePass=&#34;&lt;password&gt;&#34; <b class="conum">(2)</b>
/&gt;</code></pre>
</div>
</div>
<div class="colist arabic">
<ol>
<li>
<p>Adapt <code>keystoreFile</code> and</p>
</li>
<li>
<p><code>keystorePass</code> to your environment</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>After restarting Tomcat, you can connect to TCP port 8443 via <a href="https://en.wikipedia.org/wiki/HTTPS">HTTP over TLS (HTTPS)</a>, for example.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Download and import a Vagrant box manually</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/vagrant/import-vagrant-box/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/vagrant/import-vagrant-box/</guid>
      <description>How to download and import a Vagrant box manually.
 To download or upgrade a Vagrant box, you can use commands like vagrant box add and vagrant box update. Most of the time, you should be fine using these automated processes.
 But sometimes you need more control. Imagine you are working from home and you need to download several huge boxes. You also have lots of video calls with your customers throughout the day, so your priority is to maintain high call quality.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>How to download and import a <a href="https://www.vagrantup.com/">Vagrant</a> box manually.</p>
</div>
<div class="paragraph">
<p><strong>To download or upgrade a Vagrant box</strong>, you can use commands like <code>vagrant box add</code> and <code>vagrant box update</code>.
Most of the time, you should be fine using these automated processes.</p>
</div>
<div class="paragraph">
<p><strong>But sometimes you need more control.</strong>
Imagine you are working from home and you need to download several huge boxes.
You also have lots of video calls with your customers throughout the day, so your priority is to maintain high call quality. To do that, you need to prevent Vagrant from eating up your entire internet bandwidth.</p>
</div>
<div class="sect1">
<h2 id="_a_better_way_to_control_your_vagrant_download">A Better Way to Control your Vagrant Download</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Vagrant has no built-in option for controlling the download process, but fortunately, you can always use the tool of your choice to download a box.</p>
</div>
<div class="paragraph">
<p><strong>You also want to integrate a box smoothly into your existing Vagrant environment</strong> so that commands like <code>vagrant box update</code> will work as intended.</p>
</div>
<div class="paragraph">
<p>In the following example, we will download and import the <a href="https://app.vagrantup.com/debian/boxes/contrib-buster64">Debian Buster v10.7.0</a> box for <a href="https://www.virtualbox.org">Virtualbox</a>.</p>
</div>
<div class="paragraph">
<p><strong>Steps</strong></p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Get the direct download link for a box</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://app.vagrantup.com/debian/boxes/contrib-buster64/versions/10.7.0/providers/virtualbox.box" class="bare">https://app.vagrantup.com/debian/boxes/contrib-buster64/versions/10.7.0/providers/virtualbox.box</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Download the box</p>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>I am using <code>curl</code> here with a download rate limit, but you can use any tool that works for you.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ curl --location --remote-name --limit-rate 500k --continue-at - https://app.vagrantup.com/debian/boxes/contrib-buster64/versions/10.7.0/providers/virtualbox.box</code></pre>
</div>
</div>
</div>
</div>
</li>
<li>
<p>Add the box to Vagrant</p>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>Note the last argument, which is the local file you just downloaded.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ vagrant box add debian/contrib-buster64 ./virtualbox.box</code></pre>
</div>
</div>
</div>
</div>
</li>
<li>
<p>Rename the version directory of the box to the correct version</p>
<div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ cd ~/.vagrant.d/boxes/debian-VAGRANTSLASH-buster64/
$ mv ./0 ./10.7.0</code></pre>
</div>
</div>
<div class="paragraph">
<p>Your directory structure should now look like this:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">debian-VAGRANTSLASH-contrib-buster64/
| 10.7.0/
| | virtualbox/
| | | Vagrantfile
| | | box.ovf
| | | box_update_check
| | | contrib-buster.vmdk
| | | master_id
| | | metadata.json
| metadata_url</code></pre>
</div>
</div>
</div>
</div>
</li>
<li>
<p>If not exist, create a <code>metadata_url</code> file</p>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>This file should contain a link to the Vagrant box <strong>without the version part</strong>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ echo -n &#34;https://app.vagrantup.com/debian/boxes/contrib-buster64&#34; &gt; ./metadata_url</code></pre>
</div>
</div>
</div>
</div>
</li>
<li>
<p>Verify by listing all installed boxes</p>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ vagrant box list
debian/contrib-buster64  (virtualbox, 10.7.0)</code></pre>
</div>
</div>
</li>
</ol>
</div>
<div class="paragraph">
<p>You should see your new or updated box with the <strong>correct version number</strong> and,
commands like <code>vagrant box update</code> should work as usual.</p>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
