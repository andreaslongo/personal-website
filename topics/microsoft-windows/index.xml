<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Microsoft Windows on Andreas Longo</title>
    <link>https://www.andreaslongo.com/topics/microsoft-windows/</link>
    <description>Recent content in Microsoft Windows on Andreas Longo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreaslongo.com/topics/microsoft-windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A sudo command for Cygwin</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-sudo-command/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-sudo-command/</guid>
      <description>You can run commands from Cygwin with elevated permissions.
 On Windows, you have something like Run as different user or Run as administrator. And on Linux, you probably use sudo for this.
 To get similar functionality on Cygwin, you can add a new alias to your shell’s config file. The following is for ZSH, but it should also work with other bash-like shells.
 ~/.zshrc alias sudo=&amp;#39;cygstart --action=runas&amp;#39;   Now you can run something like this to test the alias.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can run commands from <a href="https://cygwin.com">Cygwin</a> with elevated permissions.</p>
</div>
<div class="paragraph">
<p>On Windows, you have something like <code>Run as different user</code> or <code>Run as administrator</code>.
And on Linux, you probably use <a href="https://www.sudo.ws"><code>sudo</code></a> for this.</p>
</div>
<div class="paragraph">
<p>To get similar functionality on Cygwin, you can add a new alias to your shell’s config file.
The following is for <a href="https://www.zsh.org">ZSH</a>, but it should also work with other bash-like shells.</p>
</div>
<div class="listingblock">
<div class="title"><code>~/.zshrc</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">alias sudo=&#39;cygstart --action=runas&#39;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Now you can run something like this to test the alias.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ sudo touch sudo-test</code></pre>
</div>
</div>
<div class="paragraph">
<p>Windows will ask for your username and password.
Then it will run the command in the context of the given user.</p>
</div>
<div class="paragraph">
<p>That works, but it is a bit of a hack.
The command is executed in a new Cygwin process, which is closed when the command returns.
Also, the password/user prompt is uncomfortable at best compared to the real <code>sudo</code> user experience.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Change the default home directory for Cygwin users</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-change-default-home-dir/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-change-default-home-dir/</guid>
      <description>You can define the default home directory for all Cygwin users in the nsswitch.conf file.
 For example, the following sets your default home directory to /cygdrive/c/Users/{user_name}/home, or in windows notation C:\Users{user_name}\home.
 /etc/nsswitch.conf db_home: /%H/home   You can change it to whatever you like. Consult the Cygwin documentation for more information. And look here below the /path section for more on supported wildcard characters.
 </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can define the default home directory for all <a href="https://cygwin.com">Cygwin</a> users in the <code>nsswitch.conf</code> file.</p>
</div>
<div class="paragraph">
<p>For example, the following sets your default home directory to <code>/cygdrive/c/Users/{user_name}/home</code>, or in windows notation <code>C:\Users{user_name}\home</code>.</p>
</div>
<div class="listingblock">
<div class="title"><code>/etc/nsswitch.conf</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">db_home: /%H/home</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can change it to whatever you like.
Consult the <a href="https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-mapping-nsswitch-home">Cygwin documentation</a> for more information.
And look <a href="https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-mapping-nsswitch-passwd">here</a> below the <code>/path</code> section for more on supported wildcard characters.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Use the clipboard in Vim on Cygwin</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-vim-clipboard/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-vim-clipboard/</guid>
      <description>To use the Windows clipboard in Vim on Cygwin, add the following to your Vim config file.
 ~/.vim/.vimrc set clipboard=unnamed   Vim will now use the clipboard register * for yank, delete, change and put operations. The * register gets synced with the Windows clipboard automatically.
 </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>To use the Windows clipboard in <a href="https://www.vim.org/">Vim</a> on <a href="https://cygwin.com">Cygwin</a>, add the following to your Vim config file.</p>
</div>
<div class="listingblock">
<div class="title"><code>~/.vim/.vimrc</code></div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">set clipboard=unnamed</code></pre>
</div>
</div>
<div class="paragraph">
<p>Vim will now use the clipboard register <code>*</code> for yank, delete, change and put operations.
The <code>*</code> register gets synced with the Windows clipboard automatically.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Active Directory - Managed Service Accounts</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/ad-managed-service-accounts/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/ad-managed-service-accounts/</guid>
      <description>Traditionally, system administrators use Active Directory (AD) user accounts with limited permissions to run a service (service account).
 Managed service accounts (MSA) are special accounts to eliminate the need for administrators to manually manage the credentials, passwords, and SPNs of traditional service accounts. Also, with MSAs, these tasks no longer disrupt a service (downtime).
  Administration  No manual password management is required.
 Availability  No service downtime is necessary for password changes.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Traditionally, system administrators use Active Directory (AD) user accounts with limited permissions to run a service (service account).</p>
</div>
<div class="paragraph">
<p><strong>Managed service accounts (MSA)</strong> are special accounts to eliminate the need for administrators to manually manage the credentials, passwords, and SPNs of traditional service accounts.
Also, with MSAs, these tasks no longer disrupt a service (downtime).</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">Administration</dt>
<dd>
<p>No manual password management is required.</p>
</dd>
<dt class="hdlist1">Availability</dt>
<dd>
<p>No service downtime is necessary for password changes.</p>
</dd>
<dt class="hdlist1">Security</dt>
<dd>
<p>Besides the automatic password changes, system logins are not possible with MSAs.</p>
</dd>
</dl>
</div>
<div class="sect1">
<h2 id="_types_of_managed_service_accounts">Types of managed service accounts</h2>
<div class="sectionbody">
<div class="paragraph">
<p>There are three types of managed service accounts.</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">Virtual Account</dt>
<dd>
<p>Local system accounts <strong>for local services</strong>. Access to network resources is possible via computer identity.</p>
</dd>
<dt class="hdlist1">Managed Service Account (MSA)</dt>
<dd>
<p>Active Directory accounts <strong>for generic services</strong>.</p>
</dd>
<dt class="hdlist1">Group Managed Service Account (gMSA)</dt>
<dd>
<p>Active Directory accounts <strong>for cluster services</strong>.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_requirements">Requirements</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Use PowerShell to work with managed service accounts.
Install and import the following module on the system on which you want to use MSAs.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Install-WindowsFeature RSAT-AD-PowerShell
$ Import-Module ActiveDirectory</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-US/troubleshoot/windows-server/system-management-components/remote-server-administration-tools">Remote Server Administration Tools (RSAT) for Windows</a>, <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration">ActiveDirectory</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_create_a_managed_service_account_in_active_directory">Create a managed service account in Active Directory</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ New-ADServiceAccount &lt;account name&gt; -RestrictToSingleComputer</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/new-adserviceaccount">New-ADServiceAccount</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_install_a_managed_service_account_on_a_system">Install a managed service account on a system</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Before you can use an MSA, you have to install it on the target system.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Install-ADServiceAccount &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can test the MSA from the system.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Test-ADServiceAccount &lt;account name&gt;

True</code></pre>
</div>
</div>
<div class="paragraph">
<p>Now, use the Services console <code>Services.msc</code> to configure a service to use the MSA.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Leave the password blank.</p>
</li>
<li>
<p>Ensure that the account name ends with a dollar sign <code>$</code>.</p>
</li>
<li>
<p>Start or restart the service.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/install-adserviceaccount">Install-ADServiceAccount</a>, <a href="https://docs.microsoft.com/en-us/powershell/module/activedirectory/test-adserviceaccount">Test-ADServiceAccount</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_remove_a_managed_service_account">Remove a managed service account</h2>
<div class="sectionbody">
<div class="paragraph">
<p>You should remove an MSA from the system if it is no longer needed.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Uninstall-ADServiceAccount &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/uninstall-adserviceaccount">Uninstall-ADServiceAccount</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_reset_the_password_for_a_managed_service_account">Reset the password for a managed service account</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Active Directory manages MSA passwords automatically.
You don’t have to do anything.
Should you still have to reset the password manually, you can do so.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Reset-ADServiceAccountPassword &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/reset-adserviceaccountpassword">Reset-ADServiceAccountPassword</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_troubleshooting">Troubleshooting</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_a_service_does_not_start_with_a_managed_service_account">A service does not start with a managed service account</h3>
<div class="listingblock">
<div class="title">Confirm that the MSA exists and is enabled in Active Directory.</div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Get-ADServiceAccount &lt;account name&gt;

DistinguishedName : CN=msa-sql01,CN=Managed Service Accounts,DC=example,DC=com
Enabled           : True
Name              : msa-sql01
ObjectClass       : msDS-ManagedServiceAccount
ObjectGUID        : 12345a13-12e3-1c23-b456-a123e123fd78
SamAccountName    : msa-sql01$
SID               : S-1-5-21-1234567890-1234567890-098765432-184195
UserPrincipalName :</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Confirm that the account is installed on the system</div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Install-ADServiceAccount &lt;account name&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Confirm that the account has the <code>SeServiceLogonRight</code> permission</div>
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ NTRights +r SeServiceLogonRight –u &lt;account name&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Docs: <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/get-adserviceaccount">Get-ADServiceAccount</a>, <a href="https://docs.microsoft.com/en-us/powershell/module/addsadministration/install-adserviceaccount">Install-ADServiceAccount</a>, <a href="https://ss64.com/nt/ntrights.html">NTRIGHTS.exe (Windows Server 2003 Resource Kit Tools)</a></p>
</div>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Show uptime on a Windows system</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/get-uptime/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/get-uptime/</guid>
      <description>I haven’t found a good alternative to the Unix uptime command for Windows yet.
 uptime from the procps-ng package
 $ uptime 12:53:36 up 5:03, 1 user, load average: 0.83, 0.61, 0.36 $ uptime --pretty up 5 hours, 3 minutes $ uptime --since 2021-02-17 07:50:35   Tell how long a Windows system has been running For PowerShell version 6+, there is the Get-Uptime cmdlet.
 $ Get-Uptime Days : 30 Hours : 7 Minutes : 33 Seconds : 45 Milliseconds : 0 Ticks : 26192250000000 TotalDays : 30,3151041666667 TotalHours : 727,5625 TotalMinutes : 43653,75 TotalSeconds : 2619225 TotalMilliseconds : 2619225000 $ Get-Uptime -Since Monday, January 18, 2021 7:56:57 AM   If Get-Uptime is not available, you can query the WMI with a CIM cmdlet.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>I haven’t found a good alternative to the Unix <code>uptime</code> command for Windows yet.</p>
</div>
<div class="paragraph">
<p><code>uptime</code> from the <a href="https://gitlab.com/procps-ng/procps">procps-ng</a> package</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ uptime
 12:53:36 up  5:03,  1 user,  load average: 0.83, 0.61, 0.36
$ uptime --pretty
up 5 hours, 3 minutes
$ uptime --since
2021-02-17 07:50:35</code></pre>
</div>
</div>
<div class="sect1">
<h2 id="_tell_how_long_a_windows_system_has_been_running">Tell how long a Windows system has been running</h2>
<div class="sectionbody">
<div class="paragraph">
<p>For <a href="https://docs.microsoft.com/en-us/powershell/">PowerShell</a> version 6+, there is the <a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-uptime"><code>Get-Uptime</code></a> cmdlet.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Get-Uptime

Days              : 30
Hours             : 7
Minutes           : 33
Seconds           : 45
Milliseconds      : 0
Ticks             : 26192250000000
TotalDays         : 30,3151041666667
TotalHours        : 727,5625
TotalMinutes      : 43653,75
TotalSeconds      : 2619225
TotalMilliseconds : 2619225000

$ Get-Uptime -Since

Monday, January 18, 2021 7:56:57 AM</code></pre>
</div>
</div>
<div class="paragraph">
<p>If <code>Get-Uptime</code> is not available, you can query the WMI with a CIM cmdlet.
On Windows, this is the same as the <code>Get-Uptime -Since</code> command.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-console" data-lang="console">$ Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object LastBootUpTime

LastBootUpTime
--------------
18.01.2021 07:56:41</code></pre>
</div>
</div>
<div class="paragraph">
<p>The <code>LastBootUpTime</code> value may not be updated if you have <strong>fast startup</strong> enabled for your system.</p>
</div>
</div>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
