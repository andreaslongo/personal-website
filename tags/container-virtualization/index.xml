<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Container virtualization on Andreas Longo</title>
    <link>https://www.andreaslongo.com/tags/container-virtualization/</link>
    <description>Recent content in Container virtualization on Andreas Longo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreaslongo.com/tags/container-virtualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create new images based on a running container</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/container/snapshot-running-container/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/container/snapshot-running-container/</guid>
      <description>You can save the state of a running container as a new image. This is somewhat similar to &amp;#34;creating a snapshot&amp;#34; when working with virtual machines.
 If you use Docker, just replace &amp;#39;podman&amp;#39; with &amp;#39;docker&amp;#39; in the below commands.
 podman container commit &amp;lt;container&amp;gt; &amp;lt;new-image:tag&amp;gt; podman container commit ansible ansible:snapshot.1   There is also a shorthand form of the command which does the same.
 podman commit &amp;lt;container&amp;gt; &amp;lt;new-image:tag&amp;gt;   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can save the state of a running container as a new image.
This is somewhat similar to &#34;creating a snapshot&#34; when working with virtual machines.</p>
</div>
<div class="paragraph">
<p>If you use Docker, just replace &#39;podman&#39; with &#39;docker&#39; in the below commands.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">podman container commit &lt;container&gt; &lt;new-image:tag&gt;
podman container commit ansible ansible:snapshot.1</code></pre>
</div>
</div>
<div class="paragraph">
<p>There is also a shorthand form of the command which does the same.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">podman commit &lt;container&gt; &lt;new-image:tag&gt;</code></pre>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Auto update container images</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/container/auto-update-container-images/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/container/auto-update-container-images/</guid>
      <description>Auto update Podman/Docker images.
 $ podman container run --pull=always   This runs podman image pull before the container starts.
   Note  Podman provides a Docker-compatible command line front end. You can substitute the docker command with podman or set up a shell alias alias docker=podman.     With Kubernetes, you can set the image pull policy for a container.
 spec: containers: - name: &amp;lt;name&amp;gt; imagePullPolicy: Always   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Auto update Podman/Docker images.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">$ podman container run --pull=always</code></pre>
</div>
</div>
<div class="paragraph">
<p>This runs <code>podman image pull</code> before the container starts.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
Podman provides a Docker-compatible command line front end.
You can substitute the <code>docker</code> command with <code>podman</code> or set up a shell alias <code>alias docker=podman</code>.
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>With Kubernetes, you can set the image pull policy for a container.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-yaml" data-lang="yaml">spec:
  containers:
    - name: &lt;name&gt;
      imagePullPolicy: Always</code></pre>
</div>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
