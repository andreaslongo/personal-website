<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Podman on Andreas Longo</title>
    <link>https://www.andreaslongo.com/tags/podman/</link>
    <description>Recent content in Podman on Andreas Longo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreaslongo.com/tags/podman/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto update container images</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/container/auto-update-container-images/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/container/auto-update-container-images/</guid>
      <description>Auto update Podman/Docker images.
 $ podman container run --pull=always   This runs podman image pull before the container starts.
   Note  Podman provides a Docker-compatible command line front end. You can substitute the docker command with podman or set up a shell alias alias docker=podman.     With Kubernetes, you can set the image pull policy for a container.
 spec: containers: - name: &amp;lt;name&amp;gt; imagePullPolicy: Always   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Auto update Podman/Docker images.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">$ podman container run --pull=always</code></pre>
</div>
</div>
<div class="paragraph">
<p>This runs <code>podman image pull</code> before the container starts.</p>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
Podman provides a Docker-compatible command line front end.
You can substitute the <code>docker</code> command with <code>podman</code> or set up a shell alias <code>alias docker=podman</code>.
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>With Kubernetes, you can set the image pull policy for a container.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-yaml" data-lang="yaml">spec:
  containers:
    - name: &lt;name&gt;
      imagePullPolicy: Always</code></pre>
</div>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
