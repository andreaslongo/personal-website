<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on Andreas Longo</title>
    <link>https://www.andreaslongo.com/tags/linux/</link>
    <description>Recent content in Linux on Andreas Longo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreaslongo.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extend a LVM logical volume</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/unix/lvm-extend-logical-volume/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/unix/lvm-extend-logical-volume/</guid>
      <description>Add space to a LVM logical volume.
 $ sudo lvextend --resizefs --size &amp;lt;size&amp;gt; &amp;lt;group&amp;gt;/&amp;lt;volume&amp;gt; $ sudo lvextend --resizefs --size +2G centos/root   Add 100% of the available free space.
 $ sudo lvextend --resizefs --extents +100%FREE centos/root   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Add space to a LVM logical volume.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">$ sudo lvextend --resizefs --size &lt;size&gt; &lt;group&gt;/&lt;volume&gt;
$ sudo lvextend --resizefs --size +2G centos/root</code></pre>
</div>
</div>
<div class="paragraph">
<p>Add 100% of the available free space.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">$ sudo lvextend --resizefs --extents +100%FREE centos/root</code></pre>
</div>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Zsh configuration files</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/unix/zsh-config-files/</link>
      <pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/unix/zsh-config-files/</guid>
      <description>Zsh config files and the order of sourcing during startup.
  1 ~/.zshenv  always sourced
 2 ~/.zprofile  sourced if login shell
 3 ~/.zshrc  sourced if interactive shell
 4 ~/.zlogin  sourced if login shell
 5 ~/.zlogout  sourced when exiting shell
   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Zsh config files and the order of sourcing during startup.</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">1 <code>~/.zshenv</code></dt>
<dd>
<p>always sourced</p>
</dd>
<dt class="hdlist1">2 <code>~/.zprofile</code></dt>
<dd>
<p>sourced if login shell</p>
</dd>
<dt class="hdlist1">3 <code>~/.zshrc</code></dt>
<dd>
<p>sourced if interactive shell</p>
</dd>
<dt class="hdlist1">4 <code>~/.zlogin</code></dt>
<dd>
<p>sourced if login shell</p>
</dd>
<dt class="hdlist1">5 <code>~/.zlogout</code></dt>
<dd>
<p>sourced when exiting shell</p>
</dd>
</dl>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>A `sudo` like command for Cygwin</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-sudo-command/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-sudo-command/</guid>
      <description>You can run commands from Cygwin with elevated permissions.
 On Windows, you have something like Run as different user or Run as administrator. And on Linux, you probably use the sudo command for this.
 To get similar functionality on Cygwin, you can add a new alias to your shell’s config file. The following is for Zsh, but it should also work for other bash-like shells.
 ~/.zshrc alias sudo=&amp;#39;cygstart --action=runas&amp;#39;   Now you can run something like this to test the alias.</description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can run commands from <a href="https://cygwin.com">Cygwin</a> with elevated permissions.</p>
</div>
<div class="paragraph">
<p>On Windows, you have something like <code>Run as different user</code> or <code>Run as administrator</code>.
And on Linux, you probably use the <a href="https://www.sudo.ws"><code>sudo</code></a> command for this.</p>
</div>
<div class="paragraph">
<p>To get similar functionality on Cygwin, you can add a new alias to your shell’s config file.
The following is for <a href="https://www.zsh.org">Zsh</a>, but it should also work for other bash-like shells.</p>
</div>
<div class="listingblock">
<div class="title"><code>~/.zshrc</code></div>
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">alias sudo=&#39;cygstart --action=runas&#39;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Now you can run something like this to test the alias.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">$ sudo touch sudo-test</code></pre>
</div>
</div>
<div class="paragraph">
<p>Windows will ask for your username and password.
Then it will run the command in the context of the given user.</p>
</div>
<div class="paragraph">
<p>That works, but the user experience is not great.</p>
</div>
<div class="paragraph">
<p>Your command gets executed in a new Cygwin process which automatically exits when the command returns.
Also, the user prompt is GUI based which interrupts your CLI workflow.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Change the default home directory for Cygwin users</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-change-default-home-dir/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-change-default-home-dir/</guid>
      <description>You can define the default home directory for all Cygwin users in the nsswitch.conf file.
 For example, the following sets your default home directory to /cygdrive/c/Users/{user_name}/home, or in Windows notation to C:\Users\{user_name}\home.
 /etc/nsswitch.conf db_home: /%H/home   You can change it to whatever you like.
 See the Cygwin documentation for more information. Look here below the /path section for more on supported wildcard characters.
 </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>You can define the default home directory for all <a href="https://cygwin.com">Cygwin</a> users in the <code>nsswitch.conf</code> file.</p>
</div>
<div class="paragraph">
<p>For example, the following sets your default home directory to <code>/cygdrive/c/Users/{user_name}/home</code>, or in Windows notation to <code>C:\Users\{user_name}\home</code>.</p>
</div>
<div class="listingblock">
<div class="title"><code>/etc/nsswitch.conf</code></div>
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">db_home: /%H/home</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can change it to whatever you like.</p>
</div>
<div class="paragraph">
<p>See the <a href="https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-mapping-nsswitch-home">Cygwin documentation</a> for more information.
Look <a href="https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-mapping-nsswitch-passwd">here</a> below the <code>/path</code> section for more on supported wildcard characters.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Use the clipboard in Vim on Cygwin</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-vim-clipboard/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/windows/cygwin-vim-clipboard/</guid>
      <description>To use the Windows clipboard in Vim on Cygwin, add the following to your Vim config file.
 .vimrc set clipboard=unnamed   Vim will now use the clipboard register * for yank, delete, change and put operations. The * register gets synced with the Windows clipboard automatically.
 </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>To use the Windows clipboard in <a href="https://www.vim.org/">Vim</a> on <a href="https://cygwin.com">Cygwin</a>, add the following to your Vim config file.</p>
</div>
<div class="listingblock">
<div class="title"><code>.vimrc</code></div>
<div class="content">
<pre class="highlight"><code class="language-vim" data-lang="vim">set clipboard=unnamed</code></pre>
</div>
</div>
<div class="paragraph">
<p>Vim will now use the clipboard register <code>*</code> for yank, delete, change and put operations.
The <code>*</code> register gets synced with the Windows clipboard automatically.</p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Find files and sort them by time on Unix</title>
      <link>https://www.andreaslongo.com/blog/things-i-learned/unix/find-files-sorted-by-time/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/things-i-learned/unix/find-files-sorted-by-time/</guid>
      <description>Recursively search for files by name with find. Then, sort the result by time, newest first with ls -lt.
 $ find . -type f -name &amp;#34;Makefile*&amp;#34; -exec ls -lt {} + -rw------- 1 al al 1916 Feb 17 12:44 ./cc-python/{{cookiecutter.project_repository}}/Makefile -rw------- 1 al al 1862 Feb 17 12:41 ./data-api/Makefile -rw------- 1 al al 963 Feb 16 15:45 ./personal-website/Makefile -rw------- 1 al al 254 Feb 15 17:07 ./cc-python/Makefile   </description>
      <content:encoded><![CDATA[<div class="paragraph">
<p>Recursively search for files by name with <code>find</code>.
Then, sort the result by time, newest first with <code>ls -lt</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">$ find . -type f -name &#34;Makefile*&#34; -exec ls -lt {} +
-rw------- 1 al al 1916 Feb 17 12:44 ./cc-python/{{cookiecutter.project_repository}}/Makefile
-rw------- 1 al al 1862 Feb 17 12:41 ./data-api/Makefile
-rw------- 1 al al  963 Feb 16 15:45 ./personal-website/Makefile
-rw------- 1 al al  254 Feb 15 17:07 ./cc-python/Makefile</code></pre>
</div>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
