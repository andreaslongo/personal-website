<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Things I Learned on Andreas Longo</title>
    <link>https://www.andreaslongo.com/series/things-i-learned/</link>
    <description>Recent content in Things I Learned on Andreas Longo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreaslongo.com/series/things-i-learned/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Datetime from/to String</title>
      <link>https://www.andreaslongo.com/blog/python-datetime-from-string/</link>
      <pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/python-datetime-from-string/</guid>
      <description>From String Parse a string representing a date/time in any format to a Python datetime object with the datetime.strptime() method.
 &amp;gt;&amp;gt;&amp;gt; from datetime import datetime &amp;gt;&amp;gt;&amp;gt; timestamp = &amp;#39;01.10.2009 20:36:41&amp;#39; &amp;gt;&amp;gt;&amp;gt; datetime.strptime(timestamp, &amp;#39;%d.%m.%Y %H:%M:%S&amp;#39;) datetime.datetime(2009, 10, 1, 20, 36, 41)   The second argument to datetime.strptime() is a format string build with format codes. See strftime() and strptime() Format Codes for a full list of available format codes.</description>
    </item>
    
    <item>
      <title>Vim Undo Branches</title>
      <link>https://www.andreaslongo.com/blog/vim-undo-branches/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/vim-undo-branches/</guid>
      <description>You can undo and redo changes without having to press u or CTRL-R repeatedly. Retrieve the state of your buffer as it was some time ago.
 This concept is called undo tree or undo branches. See :help undo-branches.
 Moving through the undo tree Go to older text state (10 minutes before)
 :earlier 10m   Go to newer text state (5 minutes later)
 :later 5m     </description>
    </item>
    
    <item>
      <title>Two Editor Plugins Every REST API Developer Should Know</title>
      <link>https://www.andreaslongo.com/blog/rest-api-editor-plugins/</link>
      <pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/rest-api-editor-plugins/</guid>
      <description>Whether you are a developer or a consumer of RESTful web services, these two plugins might come in handy.
 Send requests and receive responses to and from your REST APIs with your editor. You can quickly explore your REST API without switching context to other tools like curl or Postman.
   This plugin is for Vim. It is a wrapper around curl.
  This plugin is for Visual Studio Code.</description>
    </item>
    
    <item>
      <title>How to Use PKCS #12 Archives with Apache Tomcat for TLS/SSL</title>
      <link>https://www.andreaslongo.com/blog/use-pkcs12-with-tomcat/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/use-pkcs12-with-tomcat/</guid>
      <description>Today I learned how to use PKCS #12 archives with Apache Tomcat for Transport Layer Security (TLS). TLS superseded Secure Sockets Layer (SSL) protocol.
 In the following example, we create a Tomcat TLS connector that uses a PKCS #12 file as Keystore.
 Directory layout ../Tomcat/ ../Tomcat/ | certificates/ | | file.p12 | conf/ | | server.xml   The files file.p12 and server.xml contain the private key and password for a certificate.</description>
    </item>
    
    <item>
      <title>How to Download and Import a Vagrant Box Manually</title>
      <link>https://www.andreaslongo.com/blog/import-a-vagrant-box-manually/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.andreaslongo.com/blog/import-a-vagrant-box-manually/</guid>
      <description>Today I learned how to download and import a Vagrant box manually.
 To download or upgrade a Vagrant box, you can use commands like vagrant box add and vagrant box update. Most of the time, you should be fine using these automated processes.
 But sometimes you need more control. Imagine you are working from home and you need to download several huge boxes. You also have lots of video calls with your customers throughout the day, so your priority is to maintain high call quality.</description>
    </item>
    
  </channel>
</rss>
